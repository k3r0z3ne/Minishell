<<<<<<< HEAD
Waiting for PID: 31241
Waiting for PID: 31241
Waiting for PID: 31243
[?2004hminishell> 
minishell> minishell> minishell> [?2004hminishell> CBo
RLBFT_DIR = lbt
Waiting for PID: 31259
Child 31259 was terminated by signal 96
minishell> lexer/lexer_token.c lexer/lexer_utils.c\
minishell> Waiting for PID: 31262
Child 31262 was terminated by signal 96
minishell> x_tl. xctree_tl2c\/rcbitnepr_tl. 
Waiting for PID: 31265
Child 31265 was terminated by signal 96
minishell> gs
Waiting for PID: 31268
Child 31268 was terminated by signal 96
minishell> $CG $o
L)c<  $
minishell> aude{D_OOR"
minishell> lfe 
minishell> exit
Waiting for PID: 31271
Child 31271 was terminated by signal 96
minishell> exit
     14      69     503
      9      46     354
[?2004l
Waiting for PID: 31372
Child 31372 was terminated by signal 96
[?2004hminishell> ^C[?2004l
^C[?2004l
=======
NAME = minishell
CC = cc

SRC_DIR = src
OBJ_DIR = obj
INC_DIR = includes
LIBFT_DIR = libft

SRC =	main.c utils/init.c \
		lexer/lexer.c lexer/lexer_input.c lexer/lexer_illegal.c \
		lexer/lexer_token.c lexer/lexer_utils.c\
		lexer/lexer_extract.c lexer/lexer_handler.c \
		executor/execution.c executor/path.c \
		executor/exec_utils.c executor/exec_utils2.c \
		executor/redirection.c executor/here_doc.c \
		executor/one_command.c executor/several_commands.c \
		builtins/cd.c builtins/echo.c builtins/env.c \
		builtins/exit.c builtins/export.c builtins/export_utils.c \
		builtins/pwd.c builtins/unset.c \
		parser/parser.c parser/parser_init.c parser/parser_redirs.c \
		parser/parser_utils.c parser/parser_error.c \
		expander/expand.c\
		utils/global_utils.c utils/env_utils.c \
		utils/gc.c utils/signals.c
OBJ = $(SRC:%.c=$(OBJ_DIR)/%.o)

# SFLAGS = -fsanitize=address -g
CFLAGS = -Wall -Wextra -Werror -g3 -I $(INC_DIR) -I $(LIBFT_DIR)
LIBS = -L $(LIBFT_DIR) -lft -lreadline

DEF_COLOR = \033[0;39m
GREEN = \033[0;92m

all: $(NAME)

$(NAME): $(OBJ)
	@make -C $(LIBFT_DIR)
	@$(CC) $(CFLAGS) $(OBJ) $(LIBS) -o $(NAME)
	@echo "${GREEN}Compilation of $(NAME) done.${DEF_COLOR}"

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(INC_DIR)/minishell.h | $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR):
	@mkdir -p $(OBJ_DIR)

clean:
	@make -C $(LIBFT_DIR) clean
	@rm -rf $(OBJ_DIR) $(BONUS_OBJ_DIR)
	@echo "${GREEN}Files clean up done.${DEF_COLOR}"

fclean: clean
	@make -C $(LIBFT_DIR) fclean
	@rm -rf $(NAME) $(NAME_BONUS)
	@echo "${GREEN}Clean up done.${DEF_COLOR}"

re: fclean all

.PHONY: all bonus clean fclean re
NAME = minishell
CC = cc

SRC_DIR = src
OBJ_DIR = obj
INC_DIR = includes
LIBFT_DIR = libft

SRC =	main.c utils/init.c \
		lexer/lexer.c lexer/lexer_input.c lexer/lexer_illegal.c \
		lexer/lexer_token.c lexer/lexer_utils.c\
		lexer/lexer_extract.c lexer/lexer_handler.c \
		executor/execution.c executor/path.c \
		executor/exec_utils.c executor/exec_utils2.c \
		executor/redirection.c executor/here_doc.c \
		executor/one_command.c executor/several_commands.c \
		builtins/cd.c builtins/echo.c builtins/env.c \
		builtins/exit.c builtins/export.c builtins/export_utils.c \
		builtins/pwd.c builtins/unset.c \
		parser/parser.c parser/parser_init.c parser/parser_redirs.c \
		parser/parser_utils.c parser/parser_error.c \
		expander/expand.c\
		utils/global_utils.c utils/env_utils.c \
		utils/gc.c utils/signals.c
OBJ = $(SRC:%.c=$(OBJ_DIR)/%.o)

# SFLAGS = -fsanitize=address -g
CFLAGS = -Wall -Wextra -Werror -g3 -I $(INC_DIR) -I $(LIBFT_DIR)
LIBS = -L $(LIBFT_DIR) -lft -lreadline

DEF_COLOR = \033[0;39m
GREEN = \033[0;92m

all: $(NAME)

$(NAME): $(OBJ)
	@make -C $(LIBFT_DIR)
	@$(CC) $(CFLAGS) $(OBJ) $(LIBS) -o $(NAME)
	@echo "${GREEN}Compilation of $(NAME) done.${DEF_COLOR}"

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(INC_DIR)/minishell.h | $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR):
	@mkdir -p $(OBJ_DIR)

clean:
	@make -C $(LIBFT_DIR) clean
	@rm -rf $(OBJ_DIR) $(BONUS_OBJ_DIR)
	@echo "${GREEN}Files clean up done.${DEF_COLOR}"

fclean: clean
	@make -C $(LIBFT_DIR) fclean
	@rm -rf $(NAME) $(NAME_BONUS)
	@echo "${GREEN}Clean up done.${DEF_COLOR}"

re: fclean all

.PHONY: all bonus clean fclean re
>>>>>>> 8190e5b282617341c69272a79c11f431de6bb253
